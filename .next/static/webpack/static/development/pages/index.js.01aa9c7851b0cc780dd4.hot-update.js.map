{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.01aa9c7851b0cc780dd4.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport { Button, Icon, Image, Item, Label, Header } from 'semantic-ui-react'\r\n\r\nconst paragraph = <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n\r\nconst ItemExampleDivided = () => (\r\n  <>\r\n  <Header as='h2' attached='top'>\r\n  <Icon name='plug' />\r\n  <Header.Content>Uptime Guarantee</Header.Content>\r\n</Header>\r\n  <Item.Group divided>\r\n    <Item>\r\n      <Item.Image src='https://react.semantic-ui.com/images/wireframe/image.png' />\r\n\r\n      <Item.Content>\r\n        <Item.Header as='a'>12 Years a Slave</Item.Header>\r\n        <Item.Meta>\r\n          <span className='cinema'>Union Square 14</span>\r\n        </Item.Meta>\r\n        <Item.Description>{paragraph}</Item.Description>\r\n        <Item.Extra>\r\n          <Label>IMAX</Label>\r\n          <Label icon='globe' content='Additional Languages' />\r\n        </Item.Extra>\r\n      </Item.Content>\r\n    </Item>\r\n\r\n    <Item>\r\n      <Item.Image src='https://react.semantic-ui.com/images/wireframe/image.png' />\r\n\r\n      <Item.Content>\r\n        <Item.Header as='a'>My Neighbor Totoro</Item.Header>\r\n        <Item.Meta>\r\n          <span className='cinema'>IFC Cinema</span>\r\n        </Item.Meta>\r\n        <Item.Description>{paragraph}</Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n\r\n    <Item>\r\n      <Item.Image src='https://react.semantic-ui.com/images/wireframe/image.png' />\r\n\r\n      <Item.Content>\r\n        <Item.Header as='a'>Watchmen</Item.Header>\r\n        <Item.Meta>\r\n          <span className='cinema'>IFC</span>\r\n        </Item.Meta>\r\n        <Item.Description>{paragraph}</Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n  </Item.Group>\r\n  </>\r\n)\r\n\r\nexport default ItemExampleDivided\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;A","sourceRoot":""}